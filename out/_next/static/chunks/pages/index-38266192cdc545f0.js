(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5301:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(163)}])},163:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return L}});var s=n(5666),r=n.n(s),o=n(5893),i=n(9008),a=n(6440),c=n.n(a),l=n(7294);function h(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],s=!0,r=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(s=(i=a.next()).done)&&(n.push(i.value),!t||n.length!==t);s=!0);}catch(c){r=!0,o=c}finally{try{s||null==a.return||a.return()}finally{if(r)throw o}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var u=function(){var e=h(l.useState(!1),2),t=e[0],n=e[1];return(0,o.jsx)("header",{children:(0,o.jsxs)("div",{className:"inner",children:[(0,o.jsx)("div",{className:"logo",children:(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"14.722 48.811 75.69 37.985",width:"75.69",height:"37.985",children:[(0,o.jsx)("path",{fill:"#",d:"M 27.671 52.33 L 27.625 53.066 C 27.625 54.063 28.162 54.561 29.235 54.561 C 30.124 54.561 31.021 54.255 31.926 53.641 C 32.831 53.028 33.283 52.407 33.283 51.778 C 33.283 51.15 32.915 50.621 32.179 50.191 C 31.688 49.9 30.922 49.754 29.879 49.754 C 28.33 49.754 26.602 50.122 24.693 50.858 C 22.784 51.594 20.993 52.775 19.322 54.4 C 17.129 56.547 16.033 58.517 16.033 60.311 C 16.033 61.369 16.436 62.22 17.241 62.864 C 18.046 63.508 19.1 63.83 20.403 63.83 C 22.212 63.83 24.313 63.148 26.705 61.783 C 28.698 60.664 30.193 59.476 31.19 58.218 L 31.857 57.229 C 31.581 57.229 30.439 57.31 28.43 57.471 C 26.421 57.632 25.271 57.747 24.98 57.816 C 24.689 57.885 24.451 57.919 24.267 57.919 C 23.761 57.919 23.508 57.797 23.508 57.551 C 23.508 57.168 24.091 56.85 25.256 56.597 C 26.421 56.344 28.392 56.217 31.167 56.217 C 33.942 56.217 35.775 56.325 36.664 56.539 C 36.802 56.57 36.871 56.608 36.871 56.654 C 36.871 56.823 36.342 56.946 35.284 57.022 C 33.965 57.13 33.291 57.183 33.26 57.183 C 31.696 59.238 29.672 62.412 27.188 66.705 C 27.05 66.951 26.916 67.073 26.786 67.073 C 26.655 67.073 26.59 66.974 26.59 66.774 C 26.59 66.238 27.019 65.203 27.878 63.669 L 29.488 60.656 C 28.507 61.5 27.257 62.289 25.739 63.025 C 23.761 63.961 21.894 64.428 20.139 64.428 C 18.383 64.428 17.041 64.049 16.114 63.29 C 15.186 62.531 14.722 61.515 14.722 60.242 C 14.722 57.896 16.14 55.512 18.977 53.089 C 20.403 51.863 22.128 50.843 24.152 50.03 C 26.176 49.218 27.951 48.811 29.477 48.811 C 31.002 48.811 32.171 49.11 32.984 49.708 C 33.613 50.199 33.927 50.751 33.927 51.364 C 33.927 52.238 33.387 53.078 32.306 53.883 C 31.225 54.688 30.155 55.09 29.097 55.09 C 27.671 55.09 26.958 54.27 26.958 52.629 C 26.958 52.001 27.088 51.686 27.349 51.686 C 27.564 51.686 27.671 51.901 27.671 52.33 Z M 42.763 56.654 L 43.085 56.585 C 43.254 56.585 43.415 56.654 43.568 56.792 C 43.721 56.93 43.798 57.038 43.798 57.114 C 43.798 57.191 43.323 57.931 42.372 59.334 C 41.421 60.737 40.946 61.714 40.946 62.266 C 40.946 62.312 40.954 62.358 40.969 62.404 C 41.046 62.757 41.214 62.933 41.475 62.933 C 42.272 62.933 43.729 61.615 45.845 58.977 C 45.891 58.916 45.945 58.885 46.006 58.885 C 46.067 58.885 46.098 58.943 46.098 59.058 C 46.098 59.173 46.029 59.322 45.891 59.506 C 43.928 62.128 42.433 63.439 41.406 63.439 C 41.268 63.439 41.138 63.416 41.015 63.37 C 40.34 63.11 40.003 62.604 40.003 61.852 C 40.003 61.592 40.034 61.331 40.095 61.07 L 38.669 62.45 C 37.764 63.248 37.109 63.646 36.703 63.646 C 36.296 63.646 35.909 63.516 35.541 63.255 C 35.127 62.949 34.92 62.542 34.92 62.036 C 34.92 60.917 35.702 59.579 37.266 58.023 C 38.83 56.467 40.264 55.688 41.567 55.688 C 42.073 55.688 42.41 55.865 42.579 56.217 C 42.625 56.34 42.663 56.444 42.694 56.528 C 42.725 56.612 42.748 56.654 42.763 56.654 Z M 35.886 62.312 C 35.886 62.864 36.078 63.14 36.461 63.14 C 37.35 63.14 38.562 62.167 40.095 60.219 L 42.533 56.861 C 42.41 56.647 42.211 56.539 41.935 56.539 C 41 56.539 39.758 57.264 38.209 58.713 C 36.66 60.162 35.886 61.362 35.886 62.312 Z M 52.059 63.669 C 51.982 63.685 51.817 63.692 51.564 63.692 C 51.311 63.692 51.058 63.593 50.805 63.393 C 50.552 63.194 50.426 62.937 50.426 62.623 C 50.426 62.309 50.483 61.96 50.598 61.576 C 50.713 61.193 50.794 60.902 50.84 60.702 C 49.077 62.757 47.697 63.784 46.7 63.784 C 46.071 63.784 45.726 63.393 45.665 62.611 L 45.665 62.45 C 45.665 61.791 46.064 60.902 46.861 59.782 C 46.416 60.181 45.964 60.641 45.504 61.162 C 45.443 61.224 45.366 61.254 45.274 61.254 C 45.213 61.254 45.182 61.216 45.182 61.139 C 45.182 61.063 45.251 60.932 45.389 60.748 L 48.563 57.022 C 48.962 56.562 49.368 56.332 49.782 56.332 C 50.196 56.332 50.403 56.47 50.403 56.746 C 50.403 56.854 50.357 56.953 50.265 57.045 C 49.652 57.613 48.881 58.556 47.953 59.874 C 47.026 61.193 46.562 62.167 46.562 62.795 C 46.562 63.071 46.654 63.209 46.838 63.209 C 47.482 63.209 48.417 62.573 49.644 61.3 C 50.073 60.871 50.871 59.924 52.036 58.46 C 53.201 56.996 53.968 56.263 54.336 56.263 C 54.888 56.263 55.164 56.478 55.164 56.907 C 55.164 57.061 54.842 57.505 54.198 58.241 C 53.324 59.299 52.657 60.162 52.197 60.829 C 51.737 61.496 51.507 62.036 51.507 62.45 C 51.507 62.864 51.622 63.071 51.852 63.071 C 51.959 63.071 52.082 63.041 52.22 62.979 C 53.278 62.519 54.543 61.446 56.015 59.759 C 56.107 59.652 56.199 59.598 56.291 59.598 C 56.383 59.598 56.429 59.648 56.429 59.748 C 56.429 59.848 56.375 59.959 56.268 60.081 C 55.609 60.848 54.834 61.619 53.945 62.393 C 53.056 63.167 52.427 63.593 52.059 63.669 Z M 62.413 56.125 L 65.725 56.079 C 65.771 56.11 65.794 56.133 65.794 56.148 C 65.794 56.286 64.839 56.478 62.93 56.723 C 61.021 56.969 59.99 57.114 59.837 57.16 C 59.546 57.421 59.009 58.199 58.227 59.495 C 57.445 60.791 57.054 61.737 57.054 62.335 C 57.054 62.903 57.445 63.186 58.227 63.186 C 58.595 63.186 59.078 63.071 59.676 62.841 C 60.274 62.611 60.734 62.397 61.056 62.197 C 61.915 61.661 62.835 60.871 63.816 59.828 C 64.031 59.614 64.176 59.506 64.253 59.506 C 64.299 59.506 64.322 59.552 64.322 59.644 C 64.322 59.736 64.207 59.92 63.977 60.196 C 63.18 61.178 62.283 61.967 61.286 62.565 C 60.09 63.301 58.948 63.669 57.859 63.669 C 57.384 63.669 56.996 63.566 56.697 63.359 C 56.398 63.152 56.249 62.734 56.249 62.105 C 56.249 61.477 56.525 60.614 57.077 59.518 C 57.629 58.422 58.051 57.605 58.342 57.068 C 58.127 57.114 57.943 57.137 57.79 57.137 C 57.345 57.137 57.123 56.961 57.123 56.608 C 57.123 56.348 57.307 56.164 57.675 56.056 C 57.721 56.056 57.79 56.049 57.882 56.033 L 59.216 56.033 C 59.492 55.681 59.806 55.274 60.159 54.814 C 60.588 54.262 60.88 53.986 61.033 53.986 C 61.186 53.986 61.378 54.048 61.608 54.17 C 61.838 54.293 61.953 54.439 61.953 54.607 C 61.953 54.776 61.585 55.274 60.849 56.102 C 61.248 56.118 61.769 56.125 62.413 56.125 Z M 71.893 56.654 L 72.215 56.585 C 72.383 56.585 72.544 56.654 72.698 56.792 C 72.851 56.93 72.928 57.038 72.928 57.114 C 72.928 57.191 72.452 57.931 71.502 59.334 C 70.551 60.737 70.076 61.714 70.076 62.266 C 70.076 62.312 70.083 62.358 70.099 62.404 C 70.175 62.757 70.344 62.933 70.605 62.933 C 71.402 62.933 72.859 61.615 74.975 58.977 C 75.021 58.916 75.074 58.885 75.136 58.885 C 75.197 58.885 75.228 58.943 75.228 59.058 C 75.228 59.173 75.159 59.322 75.021 59.506 C 73.058 62.128 71.563 63.439 70.536 63.439 C 70.398 63.439 70.267 63.416 70.145 63.37 C 69.47 63.11 69.133 62.604 69.133 61.852 C 69.133 61.592 69.163 61.331 69.225 61.07 L 67.799 62.45 C 66.894 63.248 66.239 63.646 65.832 63.646 C 65.426 63.646 65.039 63.516 64.671 63.255 C 64.257 62.949 64.05 62.542 64.05 62.036 C 64.05 60.917 64.832 59.579 66.396 58.023 C 67.96 56.467 69.393 55.688 70.697 55.688 C 71.203 55.688 71.54 55.865 71.709 56.217 C 71.755 56.34 71.793 56.444 71.824 56.528 C 71.854 56.612 71.877 56.654 71.893 56.654 Z M 65.016 62.312 C 65.016 62.864 65.207 63.14 65.591 63.14 C 66.48 63.14 67.691 62.167 69.225 60.219 L 71.663 56.861 C 71.54 56.647 71.341 56.539 71.065 56.539 C 70.129 56.539 68.887 57.264 67.339 58.713 C 65.79 60.162 65.016 61.362 65.016 62.312 Z M 85.743 63.255 C 84.7 63.255 84.179 62.772 84.179 61.806 C 84.179 61.254 84.424 60.499 84.915 59.541 C 85.405 58.583 85.919 57.774 86.456 57.114 C 85.505 57.574 84.409 58.406 83.167 59.61 C 81.925 60.814 81.058 62.075 80.568 63.393 C 80.491 63.516 80.361 63.577 80.177 63.577 C 79.809 63.577 79.625 63.37 79.625 62.956 C 79.778 62.113 80.123 61.147 80.66 60.058 C 80.828 59.706 81.327 58.678 82.155 56.976 C 80.959 57.758 79.943 58.598 79.107 59.495 C 78.272 60.392 77.497 61.293 76.784 62.197 C 76.071 63.102 75.669 63.554 75.577 63.554 C 75.377 63.554 75.205 63.462 75.059 63.278 C 74.914 63.094 74.841 62.91 74.841 62.726 C 74.841 62.45 75.239 61.438 76.037 59.69 L 74.657 61.139 C 74.319 61.477 74.109 61.645 74.024 61.645 C 73.94 61.645 73.898 61.596 73.898 61.496 C 73.898 61.396 73.959 61.285 74.082 61.162 C 74.649 60.595 75.155 60.028 75.6 59.46 C 76.044 58.893 76.78 57.881 77.808 56.424 C 77.976 56.194 78.214 56.079 78.521 56.079 C 78.827 56.079 78.981 56.225 78.981 56.516 C 78.981 56.624 78.574 57.371 77.762 58.759 C 76.949 60.147 76.497 61.017 76.405 61.369 C 77.033 60.679 77.976 59.752 79.234 58.586 C 81.12 56.838 82.362 55.964 82.96 55.964 C 83.144 55.964 83.312 56.018 83.466 56.125 C 83.619 56.233 83.696 56.352 83.696 56.482 C 83.696 56.612 83.397 57.191 82.799 58.218 C 82.216 59.276 81.894 59.905 81.833 60.104 C 83.535 58.678 84.386 57.958 84.386 57.942 C 85.827 56.823 86.862 56.263 87.491 56.263 C 87.675 56.263 87.847 56.321 88.008 56.436 C 88.169 56.551 88.25 56.685 88.25 56.838 C 88.25 56.869 87.751 57.517 86.755 58.782 C 85.758 60.047 85.198 61.086 85.076 61.898 C 85.045 62.174 85.099 62.381 85.237 62.519 C 85.375 62.657 85.624 62.726 85.984 62.726 C 86.345 62.726 86.874 62.477 87.571 61.979 C 88.269 61.481 88.978 60.81 89.699 59.966 C 89.975 59.66 90.163 59.506 90.262 59.506 C 90.362 59.506 90.412 59.545 90.412 59.621 C 90.412 59.729 90.343 59.851 90.205 59.989 C 89.453 60.894 88.645 61.665 87.778 62.301 C 86.912 62.937 86.233 63.255 85.743 63.255 Z"}),(0,o.jsx)("path",{fill:"#",d:"M 54.817 69.415 C 54.817 69.568 54.629 69.644 54.254 69.644 C 53.879 69.644 53.503 69.448 53.128 69.057 C 52.753 68.666 52.564 68.188 52.564 67.626 C 52.564 67.063 52.729 66.551 53.058 66.093 C 53.755 65.101 54.918 64.395 56.548 63.974 C 57.721 63.669 58.893 63.516 60.065 63.516 L 60.285 63.516 C 60.45 63.516 60.899 63.545 61.631 63.602 C 61.595 63.354 61.691 63.12 61.92 62.901 C 62.15 62.682 62.41 62.571 62.703 62.571 C 63.252 62.571 63.519 62.982 63.5 63.802 C 65.478 64.166 66.522 64.719 66.632 65.463 C 66.651 65.635 66.66 65.778 66.66 65.893 C 66.66 66.275 66.555 66.465 66.344 66.465 C 66.134 66.465 66.065 66.236 66.138 65.778 C 65.68 65.072 64.773 64.575 63.417 64.289 C 63.088 65.835 61.366 69.195 58.252 74.368 C 56.182 77.767 53.773 80.611 51.025 82.901 C 47.875 85.498 44.907 86.796 42.122 86.796 C 40.419 86.796 39.155 86.347 38.33 85.45 C 37.506 84.553 37.094 83.556 37.094 82.458 C 37.094 81.36 37.296 80.42 37.699 79.637 C 38.67 77.69 40.071 76.172 41.903 75.084 C 43.258 74.264 44.513 73.853 45.667 73.853 C 46.913 73.853 47.889 74.168 48.594 74.798 C 49.299 75.428 49.651 76.221 49.651 77.174 C 49.651 78.205 49.286 79.142 48.552 79.981 C 48.095 80.516 47.728 80.782 47.453 80.782 C 47.38 80.782 47.343 80.75 47.343 80.683 C 47.343 80.616 47.371 80.525 47.425 80.41 C 48.085 79.399 48.415 78.459 48.415 77.59 C 48.415 76.721 48.187 76.01 47.728 75.456 C 47.197 74.865 46.478 74.569 45.571 74.569 C 44.665 74.569 43.653 74.951 42.535 75.714 C 41.161 76.65 40.034 78.053 39.155 79.923 C 38.697 80.86 38.468 81.828 38.468 82.83 C 38.468 83.833 38.825 84.644 39.539 85.264 C 40.254 85.884 41.216 86.194 42.425 86.194 C 47.078 86.194 51.941 81.938 57.015 73.423 C 60.057 68.346 61.613 65.234 61.686 64.089 C 60.587 64.031 60.01 64.003 59.955 64.003 C 59.095 64.003 57.991 64.252 56.645 64.747 C 55.298 65.244 54.424 65.855 54.02 66.58 C 53.855 66.866 53.773 67.181 53.773 67.525 C 53.773 67.868 53.947 68.251 54.295 68.67 C 54.644 69.091 54.817 69.339 54.817 69.415 Z M 66.335 82.959 C 65.255 82.959 64.714 82.3 64.714 80.983 C 64.714 80.238 64.966 79.413 65.47 78.507 C 65.974 77.6 66.592 76.536 67.324 75.313 C 64.98 76.536 62.855 78.34 60.949 80.725 C 59.887 82.386 59.265 83.216 59.081 83.216 C 58.55 83.216 58.284 83.054 58.284 82.73 C 58.284 82.558 58.394 82.253 58.614 81.813 C 60.391 78.512 61.738 76.096 62.653 74.569 C 64.833 70.923 66.372 68.948 67.269 68.641 C 67.306 68.623 67.343 68.613 67.379 68.613 C 67.618 68.613 67.783 68.813 67.873 69.214 C 67.818 69.615 66.866 71.067 65.016 73.567 C 63.092 76.106 62.003 77.767 61.746 78.549 C 62.425 78.034 63.606 77.166 65.291 75.943 C 67.104 74.626 68.305 73.967 68.89 73.967 C 69.477 73.967 69.769 74.206 69.769 74.683 C 69.769 74.76 69.766 74.813 69.756 74.841 C 69.747 74.87 69.11 75.771 67.846 77.547 C 66.582 79.322 65.95 80.631 65.95 81.47 C 65.95 81.909 66.107 82.128 66.417 82.128 C 67.406 82.091 68.89 80.85 70.868 78.406 C 71.033 78.234 71.158 78.148 71.24 78.148 C 71.322 78.148 71.363 78.205 71.363 78.32 C 71.363 78.702 70.456 79.733 68.643 81.412 C 67.508 82.443 66.739 82.959 66.335 82.959 Z M 80.49 74.512 L 80.875 74.426 C 81.077 74.426 81.269 74.512 81.452 74.683 C 81.636 74.855 81.727 74.99 81.727 75.084 C 81.727 75.18 81.159 76.101 80.023 77.848 C 78.888 79.595 78.32 80.811 78.32 81.498 C 78.32 81.556 78.329 81.613 78.347 81.67 C 78.439 82.11 78.641 82.329 78.952 82.329 C 79.905 82.329 81.644 80.688 84.172 77.404 C 84.227 77.328 84.292 77.289 84.365 77.289 C 84.439 77.289 84.475 77.361 84.475 77.504 C 84.475 77.648 84.392 77.833 84.227 78.062 C 81.883 81.326 80.097 82.959 78.869 82.959 C 78.704 82.959 78.549 82.93 78.402 82.873 C 77.597 82.549 77.193 81.919 77.193 80.983 C 77.193 80.659 77.23 80.334 77.303 80.009 L 75.599 81.727 C 74.519 82.721 73.736 83.216 73.251 83.216 C 72.764 83.216 72.302 83.054 71.862 82.73 C 71.368 82.349 71.121 81.842 71.121 81.212 C 71.121 79.819 72.055 78.153 73.923 76.216 C 75.792 74.279 77.505 73.309 79.062 73.309 C 79.666 73.309 80.07 73.529 80.271 73.967 C 80.325 74.121 80.372 74.25 80.408 74.355 C 80.445 74.459 80.472 74.512 80.49 74.512 Z M 72.275 81.556 C 72.275 82.243 72.504 82.586 72.962 82.586 C 74.025 82.586 75.472 81.375 77.303 78.95 L 80.216 74.769 C 80.07 74.503 79.831 74.368 79.501 74.368 C 78.384 74.368 76.9 75.271 75.05 77.075 C 73.2 78.879 72.275 80.373 72.275 81.556 Z"})]})}),(0,o.jsx)("div",{className:"burger "+(t?"close":"show"),onClick:function(){return n(!t)}}),(0,o.jsxs)("nav",{className:t?"show":"hide",children:[(0,o.jsx)("a",{href:"#about",children:"About Me"}),(0,o.jsx)("a",{href:"#experiece",children:"Work Experience"}),(0,o.jsx)("a",{href:"#skills",children:"Skill & Tech Exposure"}),(0,o.jsx)("a",{href:"#contact",children:"Contact"})]})]})})},d=n(2881),m=n.n(d),p=function(e){var t=e.aboutImage,n=e.sectionTitle,s=e.sectionDescription;return(0,o.jsx)("div",{id:"about",className:m().fullScreen,children:(0,o.jsx)("div",{className:m().aboutContainer,children:(0,o.jsxs)("div",{className:m().aboutInner,children:[(0,o.jsx)("h2",{className:m().aboutHeading,children:n}),(0,o.jsxs)("div",{className:m().aboutContent,children:[(0,o.jsx)("p",{className:m().aboutText,children:s.split("\n\n").map((function(e){return(0,o.jsxs)(l.Fragment,{children:[(0,o.jsx)("span",{children:e}),(0,o.jsx)("br",{}),(0,o.jsx)("br",{})]},e+Math.random())}))}),(0,o.jsx)("img",{src:t,alt:s.substring(0,20),className:m().aboutImage})]})]})})})},f=n(3822),C=n.n(f),g=function(e){var t=e.skills,n=e.sectionTitle,s=e.sectionDescription,r=e.skillCategory;return(0,o.jsx)("div",{id:"skills",className:C().fullScreen,children:(0,o.jsx)("div",{className:C().skillsContainer,children:(0,o.jsxs)("div",{className:C().skills,children:[(0,o.jsxs)("div",{className:C().skills__heading,children:[(0,o.jsx)("h2",{children:n}),(0,o.jsx)("h4",{children:s})]}),(0,o.jsx)("div",{className:C().skills__category,children:r&&r.map((function(e,n){return(0,o.jsxs)("div",{className:C().skills__container,children:[(0,o.jsx)("h3",{className:C().skills__category,children:e}),(0,o.jsx)("div",{className:C().skills__list,children:t&&t.filter((function(t){return t.category===e})).map((function(e,t){return(0,o.jsx)("div",{className:C().skills__list__item,children:(0,o.jsx)("div",{className:C().skills__list__item__text,children:(0,o.jsx)("span",{children:e.name})})},t+e.name)}))},n)]},e)}))})]})})})},v=n(4196),x=n.n(v);function _(e){var t=e.sectionDescription,n=e.sectionTitle,s=e.experiences;return(0,o.jsx)("div",{id:"experiece",className:x().fullScreen,children:(0,o.jsx)("div",{className:x().experienceContainer,children:(0,o.jsxs)("div",{className:x().experienceInner,children:[(0,o.jsx)("h2",{className:x().experienceHeading,children:n}),(0,o.jsx)("p",{children:t}),(0,o.jsx)("div",{className:x().experienceContent,children:s.map((function(e,t){return(0,o.jsxs)("div",{className:x().experienceItem,children:[(0,o.jsx)("h3",{className:x().experienceItemHeading,children:(0,o.jsx)("span",{className:x().experienceItemHeading__company,children:e.company})}),(0,o.jsxs)("p",{className:x().experienceItemDescription,children:[(0,o.jsx)("span",{className:x().experienceItemText__title,children:e.position})," ","|"," ",(0,o.jsx)("span",{className:x().experienceItemHeading__duration,children:e.duration})]}),(0,o.jsx)("p",{className:x().experienceItemText,children:(0,o.jsx)("span",{className:x().experienceItemText__description,children:(0,o.jsx)("span",{children:e.description})})})]},t)}))})]})})})}function b(e){var t=e.type;return(0,o.jsxs)(o.Fragment,{children:["github"===t&&(0,o.jsxs)("svg",{height:24,role:"img",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,o.jsx)("title",{children:"GitHub"}),(0,o.jsx)("path",{d:"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"})]}),"linkedin"===t&&(0,o.jsxs)("svg",{role:"img",height:24,viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,o.jsx)("title",{children:"LinkedIn"}),(0,o.jsx)("path",{d:"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"})]}),"twitter"===t&&(0,o.jsxs)("svg",{role:"img",height:24,viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,o.jsx)("title",{children:"Twitter"}),(0,o.jsx)("path",{d:"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"})]}),"mail"===t&&(0,o.jsxs)("svg",{role:"img",height:24,viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,o.jsx)("title",{children:"Gmail"}),(0,o.jsx)("path",{d:"M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-2.023 2.309-3.178 3.927-1.964L5.455 4.64 12 9.548l6.545-4.91 1.528-1.145C21.69 2.28 24 3.434 24 5.457z"})]})]})}var y=n(2212);const N=new y.Matrix4,w=new y.Object3D,j=new y.Vector3;class k extends y.EventDispatcher{constructor(){super(),this.uuid=y.MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}applyMatrix4(e){const t=(new y.Matrix3).getNormalMatrix(e);for(let n=0,s=this.vertices.length;n<s;n++){this.vertices[n].applyMatrix4(e)}for(let n=0,s=this.faces.length;n<s;n++){const e=this.faces[n];e.normal.applyMatrix3(t).normalize();for(let n=0,s=e.vertexNormals.length;n<s;n++)e.vertexNormals[n].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this}rotateX(e){return N.makeRotationX(e),this.applyMatrix4(N),this}rotateY(e){return N.makeRotationY(e),this.applyMatrix4(N),this}rotateZ(e){return N.makeRotationZ(e),this.applyMatrix4(N),this}translate(e,t,n){return N.makeTranslation(e,t,n),this.applyMatrix4(N),this}scale(e,t,n){return N.makeScale(e,t,n),this.applyMatrix4(N),this}lookAt(e){return w.lookAt(e),w.updateMatrix(),this.applyMatrix4(w.matrix),this}fromBufferGeometry(e){const t=this,n=null!==e.index?e.index:void 0,s=e.attributes;if(void 0===s.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=s.position,o=s.normal,i=s.color,a=s.uv,c=s.uv2;void 0!==c&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)t.vertices.push((new y.Vector3).fromBufferAttribute(r,u)),void 0!==i&&t.colors.push((new y.Color).fromBufferAttribute(i,u));function l(e,n,s,r){const l=void 0===i?[]:[t.colors[e].clone(),t.colors[n].clone(),t.colors[s].clone()],h=void 0===o?[]:[(new y.Vector3).fromBufferAttribute(o,e),(new y.Vector3).fromBufferAttribute(o,n),(new y.Vector3).fromBufferAttribute(o,s)],u=new A(e,n,s,h,l,r);t.faces.push(u),void 0!==a&&t.faceVertexUvs[0].push([(new y.Vector2).fromBufferAttribute(a,e),(new y.Vector2).fromBufferAttribute(a,n),(new y.Vector2).fromBufferAttribute(a,s)]),void 0!==c&&t.faceVertexUvs[1].push([(new y.Vector2).fromBufferAttribute(c,e),(new y.Vector2).fromBufferAttribute(c,n),(new y.Vector2).fromBufferAttribute(c,s)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const e=h[u],t=e.start;for(let s=t,r=t+e.count;s<r;s+=3)void 0!==n?l(n.getX(s),n.getX(s+1),n.getX(s+2),e.materialIndex):l(s,s+1,s+2,e.materialIndex)}else if(void 0!==n)for(let u=0;u<n.count;u+=3)l(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(j).negate(),this.translate(j.x,j.y,j.z),this}normalize(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,s=new y.Matrix4;return s.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(s),this}computeFaceNormals(){const e=new y.Vector3,t=new y.Vector3;for(let n=0,s=this.faces.length;n<s;n++){const s=this.faces[n],r=this.vertices[s.a],o=this.vertices[s.b],i=this.vertices[s.c];e.subVectors(i,o),t.subVectors(r,o),e.cross(t),e.normalize(),s.normal.copy(e)}}computeVertexNormals(e=!0){const t=new Array(this.vertices.length);for(let n=0,s=this.vertices.length;n<s;n++)t[n]=new y.Vector3;if(e){const e=new y.Vector3,n=new y.Vector3;for(let s=0,r=this.faces.length;s<r;s++){const r=this.faces[s],o=this.vertices[r.a],i=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,i),n.subVectors(o,i),e.cross(n),t[r.a].add(e),t[r.b].add(e),t[r.c].add(e)}}else{this.computeFaceNormals();for(let e=0,n=this.faces.length;e<n;e++){const n=this.faces[e];t[n.a].add(n.normal),t[n.b].add(n.normal),t[n.c].add(n.normal)}}for(let n=0,s=this.vertices.length;n<s;n++)t[n].normalize();for(let n=0,s=this.faces.length;n<s;n++){const e=this.faces[n],s=e.vertexNormals;3===s.length?(s[0].copy(t[e.a]),s[1].copy(t[e.b]),s[2].copy(t[e.c])):(s[0]=t[e.a].clone(),s[1]=t[e.b].clone(),s[2]=t[e.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeFlatVertexNormals(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=t.vertexNormals;3===n.length?(n[0].copy(t.normal),n[1].copy(t.normal),n[2].copy(t.normal)):(n[0]=t.normal.clone(),n[1]=t.normal.clone(),n[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeMorphNormals(){for(let t=0,n=this.faces.length;t<n;t++){const e=this.faces[t];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(let t=0,n=e.vertexNormals.length;t<n;t++)e.__originalVertexNormals[t]?e.__originalVertexNormals[t].copy(e.vertexNormals[t]):e.__originalVertexNormals[t]=e.vertexNormals[t].clone()}const e=new k;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,n=this.morphNormals[t].vertexNormals;for(let t=0,s=this.faces.length;t<s;t++){const t=new y.Vector3,s={a:new y.Vector3,b:new y.Vector3,c:new y.Vector3};e.push(t),n.push(s)}}const n=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],s=n.faceNormals[e],r=n.vertexNormals[e];s.copy(t.normal),r.a.copy(t.vertexNormals[0]),r.b.copy(t.vertexNormals[1]),r.c.copy(t.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const e=this.faces[t];e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals}}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new y.Box3),this.boundingBox.setFromPoints(this.vertices)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new y.Sphere),this.boundingSphere.setFromPoints(this.vertices)}merge(e,t,n=0){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let s;const r=this.vertices.length,o=this.vertices,i=e.vertices,a=this.faces,c=e.faces,l=this.colors,h=e.colors;void 0!==t&&(s=(new y.Matrix3).getNormalMatrix(t));for(let u=0,d=i.length;u<d;u++){const e=i[u].clone();void 0!==t&&e.applyMatrix4(t),o.push(e)}for(let u=0,d=h.length;u<d;u++)l.push(h[u].clone());for(let u=0,d=c.length;u<d;u++){const e=c[u];let t,o;const i=e.vertexNormals,l=e.vertexColors,h=new A(e.a+r,e.b+r,e.c+r);h.normal.copy(e.normal),void 0!==s&&h.normal.applyMatrix3(s).normalize();for(let n=0,r=i.length;n<r;n++)t=i[n].clone(),void 0!==s&&t.applyMatrix3(s).normalize(),h.vertexNormals.push(t);h.color.copy(e.color);for(let n=0,s=l.length;n<s;n++)o=l[n],h.vertexColors.push(o.clone());h.materialIndex=e.materialIndex+n,a.push(h)}for(let u=0,d=e.faceVertexUvs.length;u<d;u++){const t=e.faceVertexUvs[u];void 0===this.faceVertexUvs[u]&&(this.faceVertexUvs[u]=[]);for(let e=0,n=t.length;e<n;e++){const n=t[e],s=[];for(let e=0,t=n.length;e<t;e++)s.push(n[e].clone());this.faceVertexUvs[u].push(s)}}}mergeMesh(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)}mergeVertices(e=4){const t={},n=[],s=[],r=Math.pow(10,e);for(let a=0,c=this.vertices.length;a<c;a++){const e=this.vertices[a],o=Math.round(e.x*r)+"_"+Math.round(e.y*r)+"_"+Math.round(e.z*r);void 0===t[o]?(t[o]=a,n.push(this.vertices[a]),s[a]=n.length-1):s[a]=s[t[o]]}const o=[];for(let a=0,c=this.faces.length;a<c;a++){const e=this.faces[a];e.a=s[e.a],e.b=s[e.b],e.c=s[e.c];const t=[e.a,e.b,e.c];for(let n=0;n<3;n++)if(t[n]===t[(n+1)%3]){o.push(a);break}}for(let a=o.length-1;a>=0;a--){const e=o[a];this.faces.splice(e,1);for(let t=0,n=this.faceVertexUvs.length;t<n;t++)this.faceVertexUvs[t].splice(e,1)}const i=this.vertices.length-n.length;return this.vertices=n,i}setFromPoints(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const n=e[t];this.vertices.push(new y.Vector3(n.x,n.y,n.z||0))}return this}sortFacesByMaterialIndex(){const e=this.faces,t=e.length;for(let i=0;i<t;i++)e[i]._id=i;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));const n=this.faceVertexUvs[0],s=this.faceVertexUvs[1];let r,o;n&&n.length===t&&(r=[]),s&&s.length===t&&(o=[]);for(let i=0;i<t;i++){const t=e[i]._id;r&&r.push(n[t]),o&&o.push(s[t])}r&&(this.faceVertexUvs[0]=r),o&&(this.faceVertexUvs[1]=o)}toJSON(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}const t=[];for(let m=0;m<this.vertices.length;m++){const e=this.vertices[m];t.push(e.x,e.y,e.z)}const n=[],s=[],r={},o=[],i={},a=[],c={};for(let m=0;m<this.faces.length;m++){const e=this.faces[m],t=!0,s=!1,r=void 0!==this.faceVertexUvs[0][m],o=e.normal.length()>0,i=e.vertexNormals.length>0,a=1!==e.color.r||1!==e.color.g||1!==e.color.b,c=e.vertexColors.length>0;let p=0;if(p=l(p,0,0),p=l(p,1,t),p=l(p,2,s),p=l(p,3,r),p=l(p,4,o),p=l(p,5,i),p=l(p,6,a),p=l(p,7,c),n.push(p),n.push(e.a,e.b,e.c),n.push(e.materialIndex),r){const e=this.faceVertexUvs[0][m];n.push(d(e[0]),d(e[1]),d(e[2]))}if(o&&n.push(h(e.normal)),i){const t=e.vertexNormals;n.push(h(t[0]),h(t[1]),h(t[2]))}if(a&&n.push(u(e.color)),c){const t=e.vertexColors;n.push(u(t[0]),u(t[1]),u(t[2]))}}function l(e,t,n){return n?e|1<<t:e&~(1<<t)}function h(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==r[t]||(r[t]=s.length/3,s.push(e.x,e.y,e.z)),r[t]}function u(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==i[t]||(i[t]=o.length,o.push(e.getHex())),i[t]}function d(e){const t=e.x.toString()+e.y.toString();return void 0!==c[t]||(c[t]=a.length/2,a.push(e.x,e.y)),c[t]}return e.data={},e.data.vertices=t,e.data.normals=s,o.length>0&&(e.data.colors=o),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e}clone(){return(new k).copy(this)}copy(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,d=t.length;u<d;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,d=n.length;u<d;u++)this.colors.push(n[u].clone());const s=e.faces;for(let u=0,d=s.length;u<d;u++)this.faces.push(s[u].clone());for(let u=0,d=e.faceVertexUvs.length;u<d;u++){const t=e.faceVertexUvs[u];void 0===this.faceVertexUvs[u]&&(this.faceVertexUvs[u]=[]);for(let e=0,n=t.length;e<n;e++){const n=t[e],s=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];s.push(t.clone())}this.faceVertexUvs[u].push(s)}}const r=e.morphTargets;for(let u=0,d=r.length;u<d;u++){const e={};if(e.name=r[u].name,void 0!==r[u].vertices){e.vertices=[];for(let t=0,n=r[u].vertices.length;t<n;t++)e.vertices.push(r[u].vertices[t].clone())}if(void 0!==r[u].normals){e.normals=[];for(let t=0,n=r[u].normals.length;t<n;t++)e.normals.push(r[u].normals[t].clone())}this.morphTargets.push(e)}const o=e.morphNormals;for(let u=0,d=o.length;u<d;u++){const e={};if(void 0!==o[u].vertexNormals){e.vertexNormals=[];for(let t=0,n=o[u].vertexNormals.length;t<n;t++){const n=o[u].vertexNormals[t],s={};s.a=n.a.clone(),s.b=n.b.clone(),s.c=n.c.clone(),e.vertexNormals.push(s)}}if(void 0!==o[u].faceNormals){e.faceNormals=[];for(let t=0,n=o[u].faceNormals.length;t<n;t++)e.faceNormals.push(o[u].faceNormals[t].clone())}this.morphNormals.push(e)}const i=e.skinWeights;for(let u=0,d=i.length;u<d;u++)this.skinWeights.push(i[u].clone());const a=e.skinIndices;for(let u=0,d=a.length;u<d;u++)this.skinIndices.push(a[u].clone());const c=e.lineDistances;for(let u=0,d=c.length;u<d;u++)this.lineDistances.push(c[u]);const l=e.boundingBox;null!==l&&(this.boundingBox=l.clone());const h=e.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}toBufferGeometry(){const e=(new V).fromGeometry(this),t=new y.BufferGeometry,n=new Float32Array(3*e.vertices.length);if(t.setAttribute("position",new y.BufferAttribute(n,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(3*e.normals.length);t.setAttribute("normal",new y.BufferAttribute(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(3*e.colors.length);t.setAttribute("color",new y.BufferAttribute(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(2*e.uvs.length);t.setAttribute("uv",new y.BufferAttribute(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(2*e.uvs2.length);t.setAttribute("uv2",new y.BufferAttribute(n,2).copyVector2sArray(e.uvs2))}t.groups=e.groups;for(const s in e.morphTargets){const n=[],r=e.morphTargets[s];for(let e=0,t=r.length;e<t;e++){const t=r[e],s=new y.Float32BufferAttribute(3*t.data.length,3);s.name=t.name,n.push(s.copyVector3sArray(t.data))}t.morphAttributes[s]=n}if(e.skinIndices.length>0){const n=new y.Float32BufferAttribute(4*e.skinIndices.length,4);t.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new y.Float32BufferAttribute(4*e.skinWeights.length,4);t.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(t.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(t.boundingBox=e.boundingBox.clone()),t}computeTangents(){console.error("THREE.Geometry: .computeTangents() has been removed.")}computeLineDistances(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}applyMatrix(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}dispose(){this.dispatchEvent({type:"dispose"})}static createBufferGeometryFromObject(e){let t=new y.BufferGeometry;const n=e.geometry;if(e.isPoints||e.isLine){const e=new y.Float32BufferAttribute(3*n.vertices.length,3),s=new y.Float32BufferAttribute(3*n.colors.length,3);if(t.setAttribute("position",e.copyVector3sArray(n.vertices)),t.setAttribute("color",s.copyColorsArray(n.colors)),n.lineDistances&&n.lineDistances.length===n.vertices.length){const e=new y.Float32BufferAttribute(n.lineDistances.length,1);t.setAttribute("lineDistance",e.copyArray(n.lineDistances))}null!==n.boundingSphere&&(t.boundingSphere=n.boundingSphere.clone()),null!==n.boundingBox&&(t.boundingBox=n.boundingBox.clone())}else e.isMesh&&(t=n.toBufferGeometry());return t}}k.prototype.isGeometry=!0;class V{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let n,s,r;const o=e.faces;for(s=0;s<o.length;s++){const e=o[s];e.materialIndex!==r&&(r=e.materialIndex,void 0!==n&&(n.count=3*s-n.start,t.push(n)),n={start:3*s,materialIndex:r})}void 0!==n&&(n.count=3*s-n.start,t.push(n)),this.groups=t}fromGeometry(e){const t=e.faces,n=e.vertices,s=e.faceVertexUvs,r=s[0]&&s[0].length>0,o=s[1]&&s[1].length>0,i=e.morphTargets,a=i.length;let c;if(a>0){c=[];for(let e=0;e<a;e++)c[e]={name:i[e].name,data:[]};this.morphTargets.position=c}const l=e.morphNormals,h=l.length;let u;if(h>0){u=[];for(let e=0;e<h;e++)u[e]={name:l[e].name,data:[]};this.morphTargets.normal=u}const d=e.skinIndices,m=e.skinWeights,p=d.length===n.length,f=m.length===n.length;n.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let C=0;C<t.length;C++){const e=t[C];this.vertices.push(n[e.a],n[e.b],n[e.c]);const g=e.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{const t=e.normal;this.normals.push(t,t,t)}const v=e.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const t=e.color;this.colors.push(t,t,t)}if(!0===r){const e=s[0][C];void 0!==e?this.uvs.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",C),this.uvs.push(new y.Vector2,new y.Vector2,new y.Vector2))}if(!0===o){const e=s[1][C];void 0!==e?this.uvs2.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",C),this.uvs2.push(new y.Vector2,new y.Vector2,new y.Vector2))}for(let t=0;t<a;t++){const n=i[t].vertices;c[t].data.push(n[e.a],n[e.b],n[e.c])}for(let t=0;t<h;t++){const e=l[t].vertexNormals[C];u[t].data.push(e.a,e.b,e.c)}p&&this.skinIndices.push(d[e.a],d[e.b],d[e.c]),f&&this.skinWeights.push(m[e.a],m[e.b],m[e.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}}class A{constructor(e,t,n,s,r,o=0){this.a=e,this.b=t,this.c=n,this.normal=s&&s.isVector3?s:new y.Vector3,this.vertexNormals=Array.isArray(s)?s:[],this.color=r&&r.isColor?r:new y.Color,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=o}clone(){return(new this.constructor).copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}var S=function(){var e=function(e,t){for(var n=0,s=e.length;n<s;n++)e[n](t)},t=function(t){e(C.keydown,t)},n=function(t){e(C.keyup,t)},s=function(t){e(C.mousedown,t)},r=function(t){e(C.mouseup,t)},o=function(t){e(C.mousemove,t)},i=function(t){e(C.touchstart,t)},a=function(t){e(C.touchend,t)},c=function(t){e(C.touchmove,t)};window.THREE=y,window.THREE.Geometry=k,window.THREE.CubeGeometry=y.BoxGeometry;var l,h,u,d,m,p,f=new y.ObjectLoader,C={};function g(t){p=requestAnimationFrame(g);try{e(C.update,{time:t,delta:t-m})}catch(n){console.error(n.message||n,n.stack||"")}!0===d?(l.updateMatrixWorld(),undefined.update(),undefined.render(h,undefined)):u.render(h,l),m=t}this.dom=document.createElement("div"),this.width=500,this.height=500,this.dom.className="slider",this.load=function(t){d=t.project.vr,(u=new y.WebGLRenderer({antialias:!0})).setClearColor(0),u.setPixelRatio(window.devicePixelRatio),t.project.gammaInput&&(u.gammaInput=!0),t.project.gammaOutput&&(u.gammaOutput=!0),t.project.shadows&&(u.shadowMap.enabled=!0),this.dom.appendChild(u.domElement),this.setScene(f.parse(t.scene)),this.setCamera(f.parse(t.camera)),C={init:[],start:[],stop:[],keydown:[],keyup:[],mousedown:[],mouseup:[],mousemove:[],touchstart:[],touchend:[],touchmove:[],update:[]};var n="player,renderer,scene,camera",s={};for(var r in C)n+=","+r,s[r]=r;var o=JSON.stringify(s).replace(/"/g,"");for(var i in t.scripts){var a=h.getObjectByProperty("uuid",i,!0);if(void 0!==a)for(var c=t.scripts[i],m=0;m<c.length;m++){var p=c[m],g=new Function(n,p.source+"\nreturn "+o+";").bind(a)(this,u,h,l,y);for(var v in g)void 0!==g[v]&&(void 0!==C[v]?"function"==typeof g[v]&&C[v].push(g[v].bind(a)):console.warn("APP.Player: Event type not supported (",v,")"))}else console.warn("APP.Player: Script without object.",i)}e(C.init,arguments)},this.setCamera=function(e){(l=e).aspect=this.width/this.height,l.updateProjectionMatrix()},this.setScene=function(e){h=e},this.setSize=function(e,t){this.width=e,this.height=t,l&&(l.aspect=this.width/this.height,l.updateProjectionMatrix()),u&&u.setSize(e,t)},this.play=function(){document.addEventListener("keydown",t),document.addEventListener("keyup",n),document.addEventListener("mousedown",s),document.addEventListener("mouseup",r),document.addEventListener("mousemove",o),document.addEventListener("touchstart",i),document.addEventListener("touchend",a),document.addEventListener("touchmove",c),e(C.start,arguments),p=requestAnimationFrame(g),m=performance.now()},this.stop=function(){document.removeEventListener("keydown",t),document.removeEventListener("keyup",n),document.removeEventListener("mousedown",s),document.removeEventListener("mouseup",r),document.removeEventListener("mousemove",o),document.removeEventListener("touchstart",i),document.removeEventListener("touchend",a),document.removeEventListener("touchmove",c),e(C.stop,arguments),cancelAnimationFrame(p)},this.dispose=function(){for(;this.dom.children.length;)this.dom.removeChild(this.dom.firstChild);u.dispose(),l=void 0,h=void 0,u=void 0}};function U(e){return l.useEffect((function(){var t=document.querySelector(".container"),n=new y.FileLoader;setTimeout((function(){n.load(e.path,(function(e){var n=new S;n.load(JSON.parse(e)),n.setSize(window.innerWidth,window.innerHeight),n.play(),t.innerHTML="",t.appendChild(n.dom),window.addEventListener("resize",(function(){n.setSize(window.innerWidth,window.innerHeight)}))}))}),2500)}),[e.path]),(0,o.jsx)("div",{className:"container slider",id:"galaxy-banner"})}function E(e,t,n,s,r,o,i){try{var a=e[o](i),c=a.value}catch(l){return void n(l)}a.done?t(c):Promise.resolve(c).then(s,r)}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function B(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},s=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),s.forEach((function(t){T(e,t,n[t])}))}return e}var M,I=function(e){var t,n=e.data,s=(n.slider,n.about),r=n.skills,a=n.work,l=n.contact,h=n.banner,d=["/mrdoob/galaxy.json","/mrdoob/camera.json","/mrdoob/idk.json"];return(0,o.jsxs)("div",{className:c().container,children:[(0,o.jsxs)(i.default,{children:[(0,o.jsx)("title",{children:"Gautam Jha - Full Stack Developer / Freelancer"}),(0,o.jsx)("meta",{name:"description",content:"Gautam Jha, Programmer, Javascript / PHP / Python Developer, Student from DTU(Formally DCE), Worked with Amdocs, SHL, 9Yards Technology, Collabera."}),(0,o.jsx)("meta",{name:"google-site-verification",content:"uPoZCOjKbbtIVTSGl3SfL_Etk7oOZfwAyXIoMT1QGj4"}),(0,o.jsx)("meta",{name:"msvalidate.01",content:"173868577B3DDF767ADCA23200F50319"}),(0,o.jsx)("meta",{httpEquiv:"content-language",content:"en-gb"}),(0,o.jsx)("link",{rel:"icon",href:"/favicon.ico"}),(0,o.jsx)("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify({"@context":"http://schema.org","@type":"Person",address:{"@type":"PostalAddress",addressLocality:"New Delhi",addressRegion:"IN",postalCode:"110030",streetAddress:"F-170 Ladosarai, New Delhi, India"},colleague:["http://www.xyz.edu/students/alicejones.html","http://www.xyz.edu/students/bobsmith.html"],email:"mailto:gautiii@live.com",image:"gautamjha.jpg",jobTitle:"Software Engineer",name:"Gautam Jha",telephone:"(425) 123-4567",url:"https://gautam-jha.github.io/"})}}),(0,o.jsx)("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify({"@context":"https://schema.org/","@type":"WebSite",name:"Gautam Jha | Full Stack Developer | Portfolio",url:"https://gautam-jha.github.io/",potentialAction:{"@type":"SearchAction",target:"https://gautam-jha.github.io/?q={search_term_string}","query-input":"required name=search_term_string"}})}})]}),(0,o.jsx)(u,{}),(0,o.jsxs)("div",{className:c().bannerContainer,children:[(0,o.jsx)("div",{className:c().slider,children:(0,o.jsx)(U,{path:function(){var e=(new Date).getHours()%d.length;return d[e]}()})}),(0,o.jsx)("div",{className:c().bannerText,children:(0,o.jsxs)("div",{className:c().bannerInner,children:[(0,o.jsx)("p",{className:c().bannerText__heading1,children:null===h||void 0===h?void 0:h.text1}),(0,o.jsx)("h1",{className:c().bannerText__heading2,children:null===h||void 0===h?void 0:h.text2}),(0,o.jsx)("h3",{className:c().bannerText__heading3,children:null===h||void 0===h?void 0:h.text3})]})})]}),(0,o.jsx)(p,B({},s)),(0,o.jsx)(g,B({},r)),(0,o.jsx)(_,B({},a)),l&&(0,o.jsx)("div",{id:"contact",children:(0,o.jsxs)("div",{className:c().contactContainer,children:[(0,o.jsx)("h2",{className:c().experienceHeading,children:l.sectionTitle}),(0,o.jsx)("p",{children:l.sectionDescription}),(null===l||void 0===l?void 0:l.social)&&(null===l||void 0===l||null===(t=l.social)||void 0===t?void 0:t.map((function(e){return(0,o.jsx)("a",{className:c().social__links,href:e.link,target:"_blank",rel:"noreferrer",title:e.name,children:(0,o.jsx)(b,{type:e.name})},e.name)})))]})}),(0,o.jsx)("footer",{className:c().footer,children:"Developed by Gautam Jha"})]})},L=I;I.getInitialProps=(M=r().mark((function e(){var t;return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=[],e.prev=1,e.next=4,fetch("https://gautam-jha.github.io/data/api.json").then((function(e){return e.json()}));case 4:t=e.sent,e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),console.log(e.t0);case 10:return e.abrupt("return",{data:null!==t&&void 0!==t?t:[]});case 11:case"end":return e.stop()}}),e,null,[[1,7]])})),function(){var e=this,t=arguments;return new Promise((function(n,s){var r=M.apply(e,t);function o(e){E(r,n,s,o,i,"next",e)}function i(e){E(r,n,s,o,i,"throw",e)}o(void 0)}))})},2881:function(e){e.exports={aboutContainer:"About_aboutContainer__mcxDa",aboutContent:"About_aboutContent__l9UYR",aboutText:"About_aboutText__u2ODE"}},4196:function(e){e.exports={experienceContainer:"Experience_experienceContainer__bJp5M",experienceContent:"Experience_experienceContent__KTRJ_",experienceItem:"Experience_experienceItem__LCQ_e",experienceText:"Experience_experienceText__sj3tN",experienceItemText__description:"Experience_experienceItemText__description__eE52y"}},6440:function(e){e.exports={bannerContainer:"Home_bannerContainer__VsMcP",slider:"Home_slider__SoxcW",bannerInner:"Home_bannerInner__eecuf",bannerText:"Home_bannerText__sstjZ",fullScreen:"Home_fullScreen__y_1yJ",bannerText__heading1:"Home_bannerText__heading1__YvctG",bannerText__heading2:"Home_bannerText__heading2__YF_cy",bannerText__heading3:"Home_bannerText__heading3__csVDg",contactContainer:"Home_contactContainer__VAO_y",footer:"Home_footer__zed0_",social__links:"Home_social__links___7rvu"}},3822:function(e){e.exports={skillsContainer:"Skill_skillsContainer__IHjhX",skills__category:"Skill_skills__category__fJPWu",skills__container:"Skill_skills__container__p8ncK",skills__list:"Skill_skills__list__A_3i0",skills__list__item:"Skill_skills__list__item__BGlZz",skills__list__item__text:"Skill_skills__list__item__text__cxOzT",skillsContent:"Skill_skillsContent__oyQF6"}},9008:function(e,t,n){e.exports=n(5443)}},function(e){e.O(0,[737,774,888,179],(function(){return t=5301,e(e.s=t);var t}));var t=e.O();_N_E=t}]);